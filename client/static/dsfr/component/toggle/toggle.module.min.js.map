{"version":3,"file":"toggle.module.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/toggle/script/toggle/toggle-input.js","../../../src/component/toggle/script/toggle/toggle-status-label.js","../../../src/component/toggle/script/toggle/toggle-selector.js","../../../src/component/toggle/index.js","../../../src/component/toggle/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.2.1'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\nclass ToggleInput extends api.core.Instance {\n  static get instanceClassName () {\n    return 'ToggleInput';\n  }\n\n  get isChecked () {\n    return this.getAttribute('checked');\n  }\n}\n\nexport { ToggleInput };\n","import api from '../../api.js';\nimport { ToggleInput } from './toggle-input.js';\n\nclass ToggleStatusLabel extends api.core.Instance {\n  static get instanceClassName () {\n    return 'ToggleStatusLabel';\n  }\n\n  init () {\n    this.register(`input[id=\"${this.getAttribute('for')}\"]`, ToggleInput);\n    this.update();\n  }\n\n  get proxy () {\n    const scope = this;\n    return Object.assign(super.proxy, {\n      update: scope.update.bind(scope)\n    });\n  }\n\n  get input () {\n    return this.getRegisteredInstances('ToggleInput')[0];\n  }\n\n  update () {\n    const checked = this.input.isChecked;\n    const style = getComputedStyle(this.node, 'before');\n    let maxWidth = parseInt(style.width);\n    this.input.node.checked = !checked;\n\n    const style2 = getComputedStyle(this.node, 'before');\n    const width = parseInt(style2.width);\n    if (width > maxWidth) maxWidth = width;\n    this.input.node.checked = checked;\n\n    this.node.style = '--toggle-status-width:' + (maxWidth / 16) + 'rem';\n  }\n}\n\nexport { ToggleStatusLabel };\n","import api from '../../api.js';\n\nexport const ToggleSelector = {\n  STATUS_LABEL: `${api.internals.ns.selector('toggle__label')}${api.internals.ns.attr.selector('checked-label')}${api.internals.ns.attr.selector('unchecked-label')}`\n};\n","import api from './api.js';\nimport { ToggleStatusLabel } from './script/toggle/toggle-status-label.js';\nimport { ToggleSelector } from './script/toggle/toggle-selector.js';\n// import { ToggleInput } from './script/toggle/toggle-input.js';\n\napi.toggle = {\n  ToggleStatusLabel: ToggleStatusLabel,\n  ToggleSelector: ToggleSelector\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.toggle.ToggleSelector.STATUS_LABEL, api.toggle.ToggleStatusLabel);\n\nexport default api;\n"],"names":["api","window","ToggleInput","core","Instance","instanceClassName","isChecked","this","getAttribute","ToggleStatusLabel","init","register","update","proxy","Object","assign","super","bind","input","getRegisteredInstances","checked","style","getComputedStyle","node","maxWidth","parseInt","width","style2","ToggleSelector","STATUS_LABEL","internals","ns","selector","attr","toggle"],"mappings":";AAAA,MCCMA,EAAMC,OAAuB,KCCnC,MAAMC,UAAoBF,EAAIG,KAAKC,SACtBC,+BACT,MAAO,cAGLC,gBACF,OAAOC,KAAKC,aAAa,YCL7B,MAAMC,UAA0BT,EAAIG,KAAKC,SAC5BC,+BACT,MAAO,oBAGTK,OACEH,KAAKI,SAAS,aAAaJ,KAAKC,aAAa,WAAYN,GACzDK,KAAKK,SAGHC,YAEF,OAAOC,OAAOC,OAAOC,MAAMH,MAAO,CAChCD,OAFYL,KAEEK,OAAOK,KAFTV,QAMZW,YACF,OAAOX,KAAKY,uBAAuB,eAAe,GAGpDP,SACE,MAAMQ,EAAUb,KAAKW,MAAMZ,UACrBe,EAAQC,iBAAiBf,KAAKgB,KAAM,UAC1C,IAAIC,EAAWC,SAASJ,EAAMK,OAC9BnB,KAAKW,MAAMK,KAAKH,SAAWA,EAE3B,MAAMO,EAASL,iBAAiBf,KAAKgB,KAAM,UACrCG,EAAQD,SAASE,EAAOD,OAC1BA,EAAQF,IAAUA,EAAWE,GACjCnB,KAAKW,MAAMK,KAAKH,QAAUA,EAE1Bb,KAAKgB,KAAKF,MAAQ,yBAA4BG,EAAW,GAAM,OCjC5D,MAAMI,EAAiB,CAC5BC,aAAc,GAAG7B,EAAI8B,UAAUC,GAAGC,SAAS,mBAAmBhC,EAAI8B,UAAUC,GAAGE,KAAKD,SAAS,mBAAmBhC,EAAI8B,UAAUC,GAAGE,KAAKD,SAAS,sBCEjJhC,EAAIkC,OAAS,CACXzB,kBAAmBA,EACnBmB,eAAgBA,GCLlB5B,EAAI8B,UAAUnB,SAASX,EAAIkC,OAAON,eAAeC,aAAc7B,EAAIkC,OAAOzB"}