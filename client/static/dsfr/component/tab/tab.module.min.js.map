{"version":3,"file":"tab.module.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/tab/script/tab/tab-button.js","../../../src/component/tab/script/tab/tab-selector.js","../../../src/component/tab/script/tab/tab-panel.js","../../../src/component/tab/script/tab/tabs-group.js","../../../src/component/tab/script/tab/tabs-list.js","../../../src/component/tab/index.js","../../../src/component/tab/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.2.1'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\n/**\n  * TabButton correspond au bouton cliquable qui change le panel\n  * TabButton étend de DisclosureButton qui ajoute/enelve l'attribut aria-selected,\n  * Et change l'attributte tabindex a 0 si le boutton est actif (value=true), -1 s'il n'est pas actif (value=false)\n */\nclass TabButton extends api.core.DisclosureButton {\n  constructor () {\n    super(api.core.DisclosureType.SELECT);\n  }\n\n  static get instanceClassName () {\n    return 'TabButton';\n  }\n\n  apply (value) {\n    super.apply(value);\n    if (this.isPrimary) {\n      this.setAttribute('tabindex', value ? '0' : '-1');\n      if (value) {\n        if (this.list) this.list.focalize(this);\n      }\n    }\n  }\n\n  get list () {\n    return this.element.getAscendantInstance('TabsList', 'TabsGroup');\n  }\n}\n\nexport { TabButton };\n","import api from '../../api.js';\n\nexport const TabSelector = {\n  TAB: api.internals.ns.selector('tabs__tab'),\n  GROUP: api.internals.ns.selector('tabs'),\n  PANEL: api.internals.ns.selector('tabs__panel'),\n  LIST: api.internals.ns.selector('tabs__list'),\n  SHADOW: api.internals.ns.selector('tabs__shadow'),\n  SHADOW_LEFT: api.internals.ns.selector('tabs__shadow--left'),\n  SHADOW_RIGHT: api.internals.ns.selector('tabs__shadow--right')\n};\n","import api from '../../api.js';\nimport { TabButton } from './tab-button.js';\nimport { TabSelector } from './tab-selector.js';\n\n/**\n  * Tab coorespond au panel d'un élement Tabs (tab panel)\n  * Tab étend disclosure qui ajoute/enleve le modifier --selected,\n  * et ajoute/eleve l'attribut hidden, sur le panel\n  */\nclass TabPanel extends api.core.Disclosure {\n  constructor () {\n    super(api.core.DisclosureType.SELECT, TabSelector.PANEL, TabButton, 'TabsGroup');\n  }\n\n  static get instanceClassName () {\n    return 'TabPanel';\n  }\n\n  translate (direction, initial) {\n    this.style.transition = initial ? 'none' : '';\n    this.style.transform = `translate(${direction * 100}%)`;\n  }\n\n  reset () {\n    this.group.index = 0;\n  }\n}\n\nexport { TabPanel };\n","import api from '../../api.js';\n\n/**\n* TabGroup est la classe étendue de DiscosuresGroup\n* Correspond à un objet Tabs avec plusieurs tab-button & Tab (panel)\n*/\nclass TabsGroup extends api.core.DisclosuresGroup {\n  constructor () {\n    super('TabPanel');\n  }\n\n  static get instanceClassName () {\n    return 'TabsGroup';\n  }\n\n  init () {\n    super.init();\n    this.listen('transitionend', this.transitionend.bind(this));\n    this.listenKey(api.core.KeyCodes.RIGHT, this.pressRight.bind(this), true, true);\n    this.listenKey(api.core.KeyCodes.LEFT, this.pressLeft.bind(this), true, true);\n    this.listenKey(api.core.KeyCodes.HOME, this.pressHome.bind(this), true, true);\n    this.listenKey(api.core.KeyCodes.END, this.pressEnd.bind(this), true, true);\n    this.isRendering = true;\n\n    if (this.list) this.list.apply();\n  }\n\n  get list () {\n    return this.element.getDescendantInstances('TabsList', 'TabsGroup', true)[0];\n  }\n\n  transitionend (e) {\n    this.style.transition = 'none';\n  }\n\n  get buttonHasFocus () {\n    return this.members.some(member => member.buttonHasFocus);\n  }\n\n  /**\n   * Selectionne l'element suivant de la liste si on est sur un bouton\n   * Si on est à la fin on retourne au début\n   */\n  pressRight () {\n    if (this.buttonHasFocus) {\n      if (this.index < this.length - 1) {\n        this.index++;\n      } else {\n        this.index = 0;\n      }\n\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne l'element précédent de la liste si on est sur un bouton\n   * Si on est au debut retourne a la fin\n   */\n  pressLeft () {\n    if (this.buttonHasFocus) {\n      if (this.index > 0) {\n        this.index--;\n      } else {\n        this.index = this.length - 1;\n      }\n\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne le permier element de la liste si on est sur un bouton\n   */\n  pressHome () {\n    if (this.buttonHasFocus) {\n      this.index = 0;\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne le dernier element de la liste si on est sur un bouton\n   */\n  pressEnd () {\n    if (this.buttonHasFocus) {\n      this.index = this.length - 1;\n      this.focus();\n    }\n  };\n\n  focus () {\n    if (this.current) {\n      this.current.focus();\n    }\n  }\n\n  apply () {\n    for (let i = 0; i < this._index; i++) this.members[i].translate(-1);\n    this.current.style.transition = '';\n    this.current.style.transform = '';\n    for (let i = this._index + 1; i < this.length; i++) this.members[i].translate(1);\n    this.style.transition = '';\n  }\n\n  render () {\n    if (this.current === null) return;\n    const paneHeight = Math.round(this.current.node.offsetHeight);\n    if (this.panelHeight === paneHeight) return;\n    this.panelHeight = paneHeight;\n    let listHeight = 0;\n    if (this.list) listHeight = this.list.node.offsetHeight;\n    this.style.height = (this.panelHeight + listHeight) + 'px';\n  }\n}\n\nexport { TabsGroup };\n","import api from '../../api.js';\nimport { TabSelector } from './tab-selector';\n\nconst FOCALIZE_OFFSET = 16;\nconst SCROLL_OFFSET = 16; // valeur en px du scroll avant laquelle le shadow s'active ou se desactive\n\nclass TabsList extends api.core.Instance {\n  static get instanceClassName () {\n    return 'TabsList';\n  }\n\n  init () {\n    this.listen('scroll', this.scroll.bind(this));\n    this.isResizing = true;\n  }\n\n  get group () {\n    return this.element.getAscendantInstance('TabsGroup', 'TabsList');\n  }\n\n  focalize (btn) {\n    const btnRect = btn.getRect();\n    const listRect = this.getRect();\n    const actualScroll = this.node.scrollLeft;\n    if (btnRect.left < listRect.left) this.node.scrollTo(actualScroll - listRect.left + btnRect.left - FOCALIZE_OFFSET, 0);\n    else if (btnRect.right > listRect.right) this.node.scrollTo(actualScroll - listRect.right + btnRect.right + FOCALIZE_OFFSET, 0);\n  }\n\n  get isScrolling () {\n    return this._isScrolling;\n  }\n\n  set isScrolling (value) {\n    if (this._isScrolling === value) return;\n    this._isScrolling = value;\n    this.apply();\n  }\n\n  apply () {\n    if (!this.group) return;\n    if (this._isScrolling) {\n      this.group.addClass(TabSelector.SHADOW);\n      this.scroll();\n    } else {\n      this.group.removeClass(TabSelector.SHADOW_RIGHT);\n      this.group.removeClass(TabSelector.SHADOW_LEFT);\n      this.group.removeClass(TabSelector.SHADOW);\n    }\n  }\n\n  /* ajoute la classe fr-table__shadow-left ou fr-table__shadow-right sur fr-table en fonction d'une valeur de scroll et du sens (right, left) */\n  scroll () {\n    if (!this.group) return;\n    const scrollLeft = this.node.scrollLeft;\n    const isMin = scrollLeft <= SCROLL_OFFSET;\n    const max = this.node.scrollWidth - this.node.clientWidth - SCROLL_OFFSET;\n\n    const isMax = Math.abs(scrollLeft) >= max;\n    const isRtl = document.documentElement.getAttribute('dir') === 'rtl';\n    const minSelector = isRtl ? TabSelector.SHADOW_RIGHT : TabSelector.SHADOW_LEFT;\n    const maxSelector = isRtl ? TabSelector.SHADOW_LEFT : TabSelector.SHADOW_RIGHT;\n\n    if (isMin) {\n      this.group.removeClass(minSelector);\n    } else {\n      this.group.addClass(minSelector);\n    }\n\n    if (isMax) {\n      this.group.removeClass(maxSelector);\n    } else {\n      this.group.addClass(maxSelector);\n    }\n  }\n\n  resize () {\n    this.isScrolling = this.node.scrollWidth > this.node.clientWidth + SCROLL_OFFSET;\n  }\n\n  dispose () {\n    this.isScrolling = false;\n  }\n}\n\nexport { TabsList };\n","import api from './api.js';\nimport { TabPanel } from './script/tab/tab-panel.js';\nimport { TabButton } from './script/tab/tab-button.js';\nimport { TabsGroup } from './script/tab/tabs-group.js';\nimport { TabsList } from './script/tab/tabs-list.js';\nimport { TabSelector } from './script/tab/tab-selector.js';\n\napi.tab = {\n  TabPanel: TabPanel,\n  TabButton: TabButton,\n  TabsGroup: TabsGroup,\n  TabsList: TabsList,\n  TabSelector: TabSelector\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.tab.TabSelector.PANEL, api.tab.TabPanel);\napi.internals.register(api.tab.TabSelector.GROUP, api.tab.TabsGroup);\napi.internals.register(api.tab.TabSelector.LIST, api.tab.TabsList);\n\nexport default api;\n"],"names":["api","window","TabButton","core","DisclosureButton","constructor","super","DisclosureType","SELECT","instanceClassName","apply","value","this","isPrimary","setAttribute","list","focalize","element","getAscendantInstance","TabSelector","TAB","internals","ns","selector","GROUP","PANEL","LIST","SHADOW","SHADOW_LEFT","SHADOW_RIGHT","TabPanel","Disclosure","translate","direction","initial","style","transition","transform","reset","group","index","TabsGroup","DisclosuresGroup","init","listen","transitionend","bind","listenKey","KeyCodes","RIGHT","pressRight","LEFT","pressLeft","HOME","pressHome","END","pressEnd","isRendering","getDescendantInstances","e","buttonHasFocus","members","some","member","length","focus","current","i","_index","render","paneHeight","Math","round","node","offsetHeight","panelHeight","listHeight","height","TabsList","Instance","scroll","isResizing","btn","btnRect","getRect","listRect","actualScroll","scrollLeft","left","scrollTo","right","isScrolling","_isScrolling","addClass","removeClass","isMin","max","scrollWidth","clientWidth","isMax","abs","isRtl","document","documentElement","getAttribute","minSelector","maxSelector","resize","dispose","tab","register"],"mappings":"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"}